{"version":3,"file":"static/js/404.d6cb16ee.chunk.js","mappings":"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","sources":["components/ContentBlock/LeftContentBlock/styles.ts","components/ContentBlock/LeftContentBlock/index.tsx","components/ContentBlock/RightContentBlock/styles.ts","components/ContentBlock/RightContentBlock/index.tsx","components/ContentBlock/CenterContentBlock/styles.ts","components/ContentBlock/CenterContentBlock/index.tsx","components/ContentBlock/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const LeftContentSection = styled(\"section\")`\r\n  display: flex;              // Enables flexbox\r\n  justify-content: center;    // Horizontally center the content\r\n  align-items: center;        // Vertically center the content\r\n  flex-direction: column;     // Stack children vertically\r\n\r\n  position: relative;\r\n  padding: 10rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 4rem 0 4rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-top: 4rem;\r\n  }\r\n`;\r\n\r\nexport const ServiceWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n`;\r\n\r\nexport const MinTitle = styled(\"h6\")`\r\n  font-size: 20px;\r\n  line-height: 1rem;\r\n  padding: 0.5rem 0;\r\n  text-transform: uppercase;\r\n  color: #D39381;\r\n  font-family: \"Poppins Sans Regular\", sans-serif;\r\n`;\r\n\r\nexport const MinPara = styled(\"p\")`\r\n  font-size: 13px;\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { SvgIcon } from \"../../../common/SvgIcon\";\r\nimport { ContentBlockProps } from \"../types\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport {\r\n  LeftContentSection,\r\n  Content,\r\n  ContentWrapper,\r\n  ServiceWrapper,\r\n  MinTitle,\r\n  MinPara,\r\n} from \"./styles\";\r\n\r\nconst LeftContentBlock = ({\r\n  icon,\r\n  title,\r\n  content,\r\n  section,\r\n  t,\r\n  id,\r\n  backgroundColor\r\n}: ContentBlockProps) => {\r\n  return (\r\n    <LeftContentSection style={{backgroundColor: backgroundColor}}>\r\n      <Fade direction=\"left\">\r\n        <Row justify=\"space-between\" align=\"middle\" id={id}>\r\n          <Col lg={11} md={11} sm={12} xs={24}>\r\n            <SvgIcon src={icon} width=\"100%\" height=\"100%\" />\r\n          </Col>\r\n          <Col lg={11} md={11} sm={11} xs={24}>\r\n            <ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n              <Content>{t(content)}</Content>\r\n              <ServiceWrapper>\r\n                <Row justify=\"space-between\">\r\n                  {typeof section === \"object\" &&\r\n                    section.map((item: any, id: number) => {\r\n                      return (\r\n                        <Col key={id} span={11}>\r\n                          <SvgIcon src={item.icon} width=\"60px\" height=\"60px\" />\r\n                          <MinTitle>{t(item.title)}</MinTitle>\r\n                          <MinPara>{t(item.content)}</MinPara>\r\n                        </Col>\r\n                      );\r\n                    })}\r\n                </Row>\r\n              </ServiceWrapper>\r\n            </ContentWrapper>\r\n          </Col>\r\n        </Row>\r\n      </Fade>\r\n    </LeftContentSection>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(LeftContentBlock);\r\n","import styled from \"styled-components\";\r\n\r\nexport const RightBlockContainer = styled(\"section\")`\r\n  display: flex;              // Enables flexbox\r\n  justify-content: center;    // Horizontally center the content\r\n  align-items: center;        // Vertically center the content\r\n  flex-direction: column;     // Stack children vertically\r\n\r\n  position: relative;\r\n  padding: 10rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 8rem 0 6rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 4rem 0 3rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-bottom: 4rem;\r\n  }\r\n`;\r\n\r\nexport const ButtonWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: 80%;\r\n  }\r\n\r\n  button:last-child {\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { SvgIcon } from \"../../../common/SvgIcon\";\r\nimport { Button } from \"../../../common/Button\";\r\nimport { ContentBlockProps } from \"../types\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport {\r\n  RightBlockContainer,\r\n  Content,\r\n  ContentWrapper,\r\n  ButtonWrapper,\r\n} from \"./styles\";\r\n\r\nconst RightBlock = ({\r\n  title,\r\n  content,\r\n  button,\r\n  icon,\r\n  t,\r\n  id,\r\n  backgroundColor\r\n}: ContentBlockProps) => {\r\n  const scrollTo = (id: string) => {\r\n    const element = document.getElementById(id) as HTMLDivElement;\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n  return (\r\n    <RightBlockContainer style={{backgroundColor: backgroundColor}}>\r\n      <Fade direction=\"right\">\r\n        <Row justify=\"space-between\" align=\"middle\" id={id}>\r\n          <Col lg={11} md={11} sm={11} xs={24}>\r\n            <ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n              <Content>{t(content)}</Content>\r\n              <ButtonWrapper>\r\n                {typeof button === \"object\" &&\r\n                  button.map((item: any, id: number) => {\r\n                    return (\r\n                      <Button\r\n                        key={id}\r\n                        color={item.color}\r\n                        fixedWidth={true}\r\n                        onClick={() => scrollTo(\"contact\")}\r\n                      >\r\n                        {t(item.title)}\r\n                      </Button>\r\n                    );\r\n                  })}\r\n              </ButtonWrapper>\r\n            </ContentWrapper>\r\n          </Col>\r\n          <Col lg={11} md={11} sm={12} xs={24}>\r\n            <SvgIcon src={icon} width=\"100%\" height=\"100%\" />\r\n          </Col>\r\n        </Row>\r\n      </Fade>\r\n    </RightBlockContainer>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(RightBlock);\r\n","import styled from \"styled-components\";\r\n\r\nexport const LeftContentSection = styled(\"section\")`\r\n  display: flex;              // Enables flexbox\r\n  justify-content: center;    // Horizontally center the content\r\n  align-items: center;        // Vertically center the content\r\n  flex-direction: column;     // Stack children vertically\r\n\r\n  position: relative;\r\n  padding: 10rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 4rem 0 4rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-top: 4rem;\r\n  }\r\n`;\r\n\r\nexport const ServiceWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n`;\r\n\r\nexport const MinTitle = styled(\"h6\")`\r\n  font-size: 20px;\r\n  line-height: 1rem;\r\n  padding: 0.5rem 0;\r\n  text-transform: uppercase;\r\n  color: #D39381;\r\n  font-family: \"Poppins Sans Regular\", sans-serif;\r\n`;\r\n\r\nexport const MinPara = styled(\"p\")`\r\n  font-size: 13px;\r\n`;\r\n","import { Row, Col, Card } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { SvgIcon } from \"../../../common/SvgIcon\";\r\nimport { ContentBlockProps } from \"../types\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport {\r\n  LeftContentSection,\r\n  Content,\r\n  ContentWrapper,\r\n  ServiceWrapper,\r\n  MinTitle,\r\n  MinPara,\r\n} from \"./styles\";\r\n\r\nconst CenterContentBlock = ({\r\n  icon,\r\n  title,\r\n  content,\r\n  section,\r\n  t,\r\n  id,\r\n  backgroundColor\r\n\r\n}: ContentBlockProps) => {\r\n  return (\r\n    <LeftContentSection style={{backgroundColor: backgroundColor}}>\r\n      {/* <Fade direction=\"left\"> */}\r\n        <Row /**justify=\"space-between\"**/ align=\"middle\" id={id}>\r\n          {/* <Col lg={11} md={11} sm={12} xs={24}>\r\n            <SvgIcon src={icon} width=\"100%\" height=\"100%\" />\r\n          </Col> */}\r\n          {/* <Col lg={11} md={11} sm={11} xs={24}> */}\r\n            <ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n              {/* <Content>{t(content)}</Content> */}\r\n              <ServiceWrapper>\r\n                <Row /**justify=\"space-between\"**/>\r\n                  {typeof section === \"object\" &&\r\n                    section.map((item: any, id: number) => {\r\n                      return (\r\n                        <Col key={id} span={11}>\r\n                          <Card\r\n                            style={{ borderRadius: 10, backgroundColor: \"transparent\" }} // Rounded edges\r\n                            hoverable // Add hover effect\r\n                          >\r\n                            <SvgIcon src={item.icon} width=\"60px\" height=\"60px\" />\r\n                            <MinTitle>{t(item.title)}</MinTitle>\r\n                            <MinPara>{t(item.content)}</MinPara>\r\n                          </Card>\r\n                        </Col>\r\n                      );\r\n                    })}\r\n                </Row>\r\n              </ServiceWrapper>\r\n            </ContentWrapper>\r\n          {/* </Col> */}\r\n        </Row>\r\n      {/* </Fade> */}\r\n    </LeftContentSection>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(CenterContentBlock);\r\n","import LeftContentBlock from \"./LeftContentBlock\";\r\nimport RightContentBlock from \"./RightContentBlock\";\r\nimport CenterContentBlock from \"./CenterContentBlock\";\r\n\r\nimport { ContentBlockProps } from \"./types\";\r\n\r\nconst ContentBlock = (props: ContentBlockProps) => {\r\n  if (props.type === \"left\") return <LeftContentBlock {...props} />;\r\n  if (props.type === \"right\") return <RightContentBlock {...props} />;\r\n  if (props.type === \"center\") return <CenterContentBlock {...props} />;\r\n\r\n  return null;\r\n};\r\n\r\nexport default ContentBlock;\r\n"],"names":["LeftContentSection","styled","_templateObject","_taggedTemplateLiteral","Content","_templateObject2","ContentWrapper","_templateObject3","ServiceWrapper","_templateObject4","MinTitle","_templateObject5","MinPara","_templateObject6","withTranslation","_ref","icon","title","content","section","t","id","backgroundColor","_jsx","style","children","Fade","direction","_jsxs","Row","justify","align","Col","lg","md","sm","xs","SvgIcon","src","width","height","map","item","span","RightBlockContainer","ButtonWrapper","button","Button","color","fixedWidth","onClick","document","getElementById","scrollIntoView","behavior","scrollTo","Card","borderRadius","hoverable","props","type","LeftContentBlock","RightContentBlock","CenterContentBlock"],"sourceRoot":""}