{"version":3,"file":"static/js/876.64c67268.chunk.js","mappings":"yLAEO,MAAMA,EAAoBC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iTAe9BC,EAAcJ,EAAAA,GAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,0WAiBxBG,EAAgBN,EAAAA,GAAOC,IAAGM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,oUAQ1BK,EAAeR,EAAAA,GAAOS,GAAEC,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,uFAQxBQ,EAAqBX,EAAAA,GAAOY,EAACC,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,iDAK7BW,EAAgBd,EAAAA,GAAOC,IAAGc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,mGAO1Ba,EAAOhB,EAAAA,GAAOiB,IAAGC,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,yFAMjBgB,EAAQnB,EAAAA,GAAOoB,GAAEC,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,2FAOjBmB,EAAWtB,EAAAA,GAAOS,GAAEc,IAAAA,GAAApB,EAAAA,EAAAA,GAAA,iJ,aCpEjC,MAAMqB,EAAe,CACnB,CACEC,MAAO,qBACPC,YAAa,qEACbC,MAAO,CAAC,0CACRC,KAAM,gCAER,CACEH,MAAO,sBACPC,YAAa,0EACbC,MAAO,CAAC,6CACRC,KAAM,iCAER,CACEH,MAAO,qBACPC,YAAa,6EACbC,MAAO,CAAC,yCACRC,KAAM,gCAER,CACEH,MAAO,kBACPC,YAAa,sEACbC,MAAO,CAAC,uCACRC,KAAM,6BAER,CACEH,MAAO,mBACPC,YAAa,oEACbC,MAAO,CAAC,uCACRC,KAAM,8BAER,CACEH,MAAO,2BACPC,YAAa,8DACbC,MAAO,CAAC,oCACRC,KAAM,uCAqCV,EAhCiBC,IAA6C,IAA5C,GAAEC,EAAE,gBAAEC,GAAgCF,EACtD,MAAMG,GAAUC,EAAAA,EAAAA,MAMhB,OACEC,EAAAA,EAAAA,MAAA,OAAKJ,GAAIA,EAAGK,SAAA,EACVD,EAAAA,EAAAA,MAACf,EAAK,CAAAgB,SAAA,EAACC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,cAAa,6BACvBC,EAAAA,EAAAA,KAACd,EAAQ,CAAAa,SAAC,sIAEVC,EAAAA,EAAAA,KAACrC,EAAiB,CAACsC,MAAO,CAAEN,gBAAiBA,GAAkBI,SAC5DX,EAAac,KAAIC,IAChBL,EAAAA,EAAAA,MAAC9B,EAAW,CAAqBoC,QAASA,KAAMC,OAX/Bb,EAW+CW,EAAQX,UAV9EI,EAAQU,KAAKd,GADUA,KAW6D,EAAAO,SAAA,EAC5EC,EAAAA,EAAAA,KAACtB,EAAa,CAAAqB,SACXI,EAAQZ,MAAMW,KAAI,CAACK,EAAMC,KACxBR,EAAAA,EAAAA,KAACpB,EAAI,CAAa6B,IAAKF,GAAZC,QAGfV,EAAAA,EAAAA,MAAC5B,EAAa,CAAA6B,SAAA,EACZC,EAAAA,EAAAA,KAAC5B,EAAY,CAAA2B,SAAEI,EAAQd,SACvBW,EAAAA,EAAAA,KAACzB,EAAkB,CAAAwB,SAAEI,EAAQb,mBARfa,EAAQd,aAc1B,C","sources":["components/Services/styles.ts","components/Services/index.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ServicesContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr); // Default to two columns\n  gap: 20px;\n  padding: 20px;\n\n  @media (max-width: 768px) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n\n  @media (max-width: 480px) {\n    grid-template-columns: 1fr; // One column on mobile\n  }\n`;\n\nexport const ServiceCard = styled.div`\n  background: white;\n  border-radius: 25px;\n  padding: 20px;\n  box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  cursor: pointer;\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n\n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 6px 12px rgba(0,0,0,0.2);\n  }\n`;\n\nexport const TextContainer = styled.div`\n  width: 100%;  // Takes the full width of the card\n  background-color: #f3f3f3;  // Light gray background for the text area\n  border-radius: 10px;  // Optional: adds rounded corners\n  padding: 10px 20px;  // Padding inside the text container\n  margin-top: 20px;  // Margin to separate it from the icon above\n`;\n\nexport const ServiceTitle = styled.h2`\n  margin: 0;\n  font-size: 20px;\n  color: #333;\n    text-align: center;\n\n`;\n\nexport const ServiceDescription = styled.p`\n  text-align: center;\n  color: #666;\n`;\n\nexport const IconContainer = styled.div`\n  margin-top: 20px;\n  display: flex;\n  justify-content: space-around;\n  width: 100%;\n`;\n\nexport const Icon = styled.img`\n  width: 250px;  // Adjusted size to not override the text\n  height: auto;\n\n`;\n\nexport const Title = styled.h1`\n  color: #FFF;\n  font-size: 24px;\n  text-align: center;\n  padding-top: 20px;\n`;\n\nexport const Subtitle = styled.h2`\n  color: #RED;  // Corrected the placeholder color to a valid one\n  font-size: 18px;\n  text-align: center;\n  padding-bottom: 20px;\n`;","// Services/index.tsx\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Title, Subtitle, TextContainer, ServiceCard, ServicesContainer, ServiceTitle, ServiceDescription, Icon, IconContainer } from './styles';\nimport { ServicesProps } from \"./types\";\nimport TechStack from \"./TechStack\";\n\nconst servicesData = [\n  {\n    title: 'Software Solutions',\n    description: 'Tailored development for scalable, efficient business applications',\n    icons: ['img/svg/saguaro_software_solutions.svg'],\n    path: '/services/software-solutions'\n  },\n  {\n    title: 'Custom Integrations',\n    description: 'Integrate plugins, libraries, and frameworks for enhanced functionality',\n    icons: ['img/svg/saguaro_customer_integrations.svg'],\n    path: '/services/custom-integrations'\n  },\n  {\n    title: 'Tech Consultations',\n    description: 'Strategic guidance on technology, architecture, and digital transformation',\n    icons: ['img/svg/saguaro_tech_consultation.svg'],\n    path: '/services/tech-consultations'\n  },\n  {\n    title: 'Cloud Migration',\n    description: 'Seamless transition to scalable cloud platforms for business growth',\n    icons: ['img/svg/saguaro_cloud_migration.svg'],\n    path: '/services/cloud-solutions'\n  },\n  {\n    title: 'On-going Support',\n    description: 'Reliable maintenance and troubleshooting for continuous operation',\n    icons: ['img/svg/saguaro_ongoing_support.svg'],\n    path: '/services/on-going-support'\n  },\n  {\n    title: 'Performance Optimization',\n    description: 'Enhance system efficiency and speed for optimal performance',\n    icons: ['img/svg/saguaro_optimization.svg'],\n    path: '/services/performance-optimization'\n  },\n  // Add other services following the same structure\n];\n\nconst Services = ({ id, backgroundColor }: ServicesProps) => {\n  const history = useHistory();\n\n  const handleCardClick = (path: string) => {\n    history.push(path);\n  };\n\n  return (\n    <div id={id}>\n      <Title><b>Services:</b> What we have to offer</Title>\n      <Subtitle>We are dedicated to delivering scalable, resilient, and successful solutions that bring your business goals and visions to life!</Subtitle>\n\n      <ServicesContainer style={{ backgroundColor: backgroundColor }}>\n        {servicesData.map(service => (\n          <ServiceCard key={service.title} onClick={() => handleCardClick(service.path)}>\n            <IconContainer>\n              {service.icons.map((icon, index) => (\n                <Icon key={index} src={icon} />\n              ))}\n            </IconContainer>\n            <TextContainer>\n              <ServiceTitle>{service.title}</ServiceTitle>\n              <ServiceDescription>{service.description}</ServiceDescription>\n            </TextContainer>\n          </ServiceCard>\n        ))}\n      </ServicesContainer>\n      {/* <TechStack/> */}\n    </div>\n  );\n};\n\nexport default Services;\n"],"names":["ServicesContainer","styled","div","_templateObject","_taggedTemplateLiteral","ServiceCard","_templateObject2","TextContainer","_templateObject3","ServiceTitle","h2","_templateObject4","ServiceDescription","p","_templateObject5","IconContainer","_templateObject6","Icon","img","_templateObject7","Title","h1","_templateObject8","Subtitle","_templateObject9","servicesData","title","description","icons","path","_ref","id","backgroundColor","history","useHistory","_jsxs","children","_jsx","style","map","service","onClick","handleCardClick","push","icon","index","src"],"sourceRoot":""}